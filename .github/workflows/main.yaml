name: CI/CD EVENTARRY INVITATION SVC
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 60
    steps:
      # SSH into server and deploy
    - name: Deploy on Server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.KEY }}
        script: |
          # Stop and remove the existing container (if any)
          docker stop ${{ secrets.NAME }} || true
          docker rm ${{ secrets.NAME }} || true
          
          # Pull the latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
          
          # Run the new container
          docker run -d --name ${{ secrets.NAME }} --memory 512m \
          --memory-reservation 256m \
          --network main \
          --restart unless-stopped \
          -e PORT=${{ secrets.PORT }} \
          -e EVENTARRY_DATABASE_URL="mysql://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@${{ secrets.DATABASE_HOST }}:${{ secrets.DATABASE_PORT }}/${{ secrets.DATABASE_NAME }}" \
          -e EVENTARRY_REDIS_HOST=${{ secrets.REDIS_HOST }} \
          -e EVENTARRY_REDIS_PORT=${{ secrets.REDIS_PORT }} \
          -e EVENTARRY_JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -p ${{ secrets.PORT }}:${{ secrets.PORT }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest

        env:
          NAME: ${{ secrets.NAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PORT: ${{ secrets.PORT }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          KEY: ${{ secrets.KEY }}