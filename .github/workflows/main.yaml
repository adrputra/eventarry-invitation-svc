name: CI/CD EVENTARRY INVITATION SVC
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 60
    steps:
      - name: Deploy on Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.KEY }}
          envs: |
            DOCKER_USERNAME
            NAME
            DATABASE_USER
            DATABASE_PASSWORD
            DATABASE_HOST
            DATABASE_PORT
            DATABASE_NAME
            REDIS_HOST
            REDIS_PORT
            JWT_SECRET
            PORT
          script: |
            docker stop $NAME || true
            docker rm $NAME || true
            
            docker pull $DOCKER_USERNAME/$NAME:latest
            
            DATABASE_URL="mysql://$DATABASE_USER:$DATABASE_PASSWORD@$DATABASE_HOST:$DATABASE_PORT/$DATABASE_NAME"
            
            docker run -d --name $NAME \
              --memory 512m \
              --memory-reservation 256m \
              --network main \
              --restart unless-stopped \
              -e PORT=$PORT \
              -e EVENTARRY_DATABASE_URL="$DATABASE_URL" \
              -e EVENTARRY_REDIS_HOST=$REDIS_HOST \
              -e EVENTARRY_REDIS_PORT=$REDIS_PORT \
              -e EVENTARRY_JWT_SECRET=$JWT_SECRET \
              -p $PORT:$PORT \
              $DOCKER_USERNAME/$NAME:latest